[{"F:\\MTS-ReactJs\\mts-v2\\src\\index.js":"1","F:\\MTS-ReactJs\\mts-v2\\src\\reportWebVitals.js":"2","F:\\MTS-ReactJs\\mts-v2\\src\\components\\Header\\index.jsx":"3","F:\\MTS-ReactJs\\mts-v2\\src\\components\\NotFound\\index.jsx":"4","F:\\MTS-ReactJs\\mts-v2\\src\\features\\Student\\index.jsx":"5","F:\\MTS-ReactJs\\mts-v2\\src\\features\\Home\\index.jsx":"6","F:\\MTS-ReactJs\\mts-v2\\src\\App\\App.js":"7","F:\\MTS-ReactJs\\mts-v2\\src\\features\\Student\\pages\\AddEdit\\index.jsx":"8","F:\\MTS-ReactJs\\mts-v2\\src\\features\\Student\\pages\\Table\\index.jsx":"9","F:\\MTS-ReactJs\\mts-v2\\src\\components\\SideBar\\index.jsx":"10","F:\\MTS-ReactJs\\mts-v2\\src\\components\\SideBar\\components\\StudentSide.jsx":"11","F:\\MTS-ReactJs\\mts-v2\\src\\components\\SideBar\\components\\AccountSide.jsx":"12","F:\\MTS-ReactJs\\mts-v2\\src\\components\\SideBar\\components\\HomeSide.jsx":"13","F:\\MTS-ReactJs\\mts-v2\\src\\components\\SideBar\\components\\TeamSide.jsx":"14","F:\\MTS-ReactJs\\mts-v2\\src\\components\\SideBar\\components\\TeacherSide.jsx":"15","F:\\MTS-ReactJs\\mts-v2\\src\\components\\SideBar\\components\\TopicSide.jsx":"16","F:\\MTS-ReactJs\\mts-v2\\src\\components\\SideBar\\components\\NotiProfileSide.jsx":"17","F:\\MTS-ReactJs\\mts-v2\\src\\components\\Loader\\index.jsx":"18","F:\\MTS-ReactJs\\mts-v2\\src\\features\\Student\\pages\\Info\\index.jsx":"19","F:\\MTS-ReactJs\\mts-v2\\src\\utils\\converter.js":"20","F:\\MTS-ReactJs\\mts-v2\\src\\features\\Login\\index.jsx":"21","F:\\MTS-ReactJs\\mts-v2\\src\\features\\Topic\\pages\\Table\\index.jsx":"22","F:\\MTS-ReactJs\\mts-v2\\src\\custom-fields\\Input\\index.jsx":"23","F:\\MTS-ReactJs\\mts-v2\\src\\custom-fields\\Button\\index.jsx":"24","F:\\MTS-ReactJs\\mts-v2\\src\\custom-fields\\Notification\\index.jsx":"25","F:\\MTS-ReactJs\\mts-v2\\src\\custom-fields\\Popup\\index.jsx":"26","F:\\MTS-ReactJs\\mts-v2\\src\\custom-fields\\ConfirmDialog\\index.jsx":"27","F:\\MTS-ReactJs\\mts-v2\\src\\custom-fields\\ButtonIcon\\index.jsx":"28","F:\\MTS-ReactJs\\mts-v2\\src\\custom-fields\\RadioGroup\\index.jsx":"29","F:\\MTS-ReactJs\\mts-v2\\src\\custom-fields\\DatePicker\\index.jsx":"30","F:\\MTS-ReactJs\\mts-v2\\src\\custom-fields\\Select\\index.jsx":"31","F:\\MTS-ReactJs\\mts-v2\\src\\features\\Teacher\\index.jsx":"32","F:\\MTS-ReactJs\\mts-v2\\src\\features\\Teacher\\pages\\Info\\index.jsx":"33","F:\\MTS-ReactJs\\mts-v2\\src\\features\\Teacher\\pages\\Table\\index.jsx":"34","F:\\MTS-ReactJs\\mts-v2\\src\\features\\Teacher\\pages\\AddEdit\\index.jsx":"35","F:\\MTS-ReactJs\\mts-v2\\src\\custom-fields\\Checkbox\\index.jsx":"36","F:\\MTS-ReactJs\\mts-v2\\src\\features\\Topic\\index.jsx":"37","F:\\MTS-ReactJs\\mts-v2\\src\\features\\Topic\\pages\\AddEdit\\index.jsx":"38","F:\\MTS-ReactJs\\mts-v2\\src\\features\\Topic\\components\\Deadline\\index.jsx":"39","F:\\MTS-ReactJs\\mts-v2\\src\\app\\App.js":"40","F:\\MTS-ReactJs\\mts-v2\\src\\features\\Team\\index.jsx":"41","F:\\MTS-ReactJs\\mts-v2\\src\\features\\Team\\AddEdit\\index.jsx":"42","F:\\MTS-ReactJs\\mts-v2\\src\\features\\Team\\Table\\index.jsx":"43","F:\\MTS-ReactJs\\mts-v2\\src\\components\\SideBarForUser\\index.jsx":"44","F:\\MTS-ReactJs\\mts-v2\\src\\routes\\User\\index.jsx":"45","F:\\MTS-ReactJs\\mts-v2\\src\\routes\\Admin\\index.jsx":"46","F:\\MTS-ReactJs\\mts-v2\\src\\custom-fields\\Use\\useFormCustom.jsx":"47","F:\\MTS-ReactJs\\mts-v2\\src\\api\\Handle\\handleApi.js":"48","F:\\MTS-ReactJs\\mts-v2\\src\\api\\Handle\\executeError.js":"49","F:\\MTS-ReactJs\\mts-v2\\src\\utils\\getObject.js":"50","F:\\MTS-ReactJs\\mts-v2\\src\\features\\Team\\Views\\index.jsx":"51","F:\\MTS-ReactJs\\mts-v2\\src\\api\\Login\\loginAPI.js":"52","F:\\MTS-ReactJs\\mts-v2\\src\\features\\Account\\index.jsx":"53","F:\\MTS-ReactJs\\mts-v2\\src\\features\\Account\\pages\\Table\\index.jsx":"54","F:\\MTS-ReactJs\\mts-v2\\src\\features\\Account\\pages\\Update\\index.jsx":"55","F:\\MTS-ReactJs\\mts-v2\\src\\api\\Account\\index.js":"56","F:\\MTS-ReactJs\\mts-v2\\src\\custom-fields\\Use\\useTableCustom.jsx":"57","F:\\MTS-ReactJs\\mts-v2\\src\\styles\\Form\\index.jsx":"58","F:\\MTS-ReactJs\\mts-v2\\src\\styles\\Info\\index.jsx":"59","F:\\MTS-ReactJs\\mts-v2\\src\\styles\\Login\\index.jsx":"60","F:\\MTS-ReactJs\\mts-v2\\src\\styles\\SelectTopic\\index.jsx":"61","F:\\MTS-ReactJs\\mts-v2\\src\\styles\\Table\\index.jsx":"62","F:\\MTS-ReactJs\\mts-v2\\src\\styles\\Color\\index.js":"63","F:\\MTS-ReactJs\\mts-v2\\src\\constants\\InitialValues\\index.js":"64","F:\\MTS-ReactJs\\mts-v2\\src\\constants\\Type\\type.js":"65","F:\\MTS-ReactJs\\mts-v2\\src\\api\\URL\\index.js":"66","F:\\MTS-ReactJs\\mts-v2\\src\\api\\Topic\\index.js":"67","F:\\MTS-ReactJs\\mts-v2\\src\\api\\Team\\index.js":"68","F:\\MTS-ReactJs\\mts-v2\\src\\api\\Teacher\\index.js":"69","F:\\MTS-ReactJs\\mts-v2\\src\\api\\GetListForSelect\\facultyList.js":"70","F:\\MTS-ReactJs\\mts-v2\\src\\api\\GetListForSelect\\typeTopicListAPI.js":"71","F:\\MTS-ReactJs\\mts-v2\\src\\api\\GetListForSelect\\positionList.js":"72","F:\\MTS-ReactJs\\mts-v2\\src\\api\\GetListForSelect\\academyList.js":"73","F:\\MTS-ReactJs\\mts-v2\\src\\api\\GetListForSelect\\topicListAPI.js":"74","F:\\MTS-ReactJs\\mts-v2\\src\\api\\Student\\index.js":"75","F:\\MTS-ReactJs\\mts-v2\\src\\styles\\Side\\index.jsx":"76","F:\\MTS-ReactJs\\mts-v2\\src\\custom-fields\\DateTimePicker\\index.jsx":"77"},{"size":478,"mtime":1612624921304,"results":"78","hashOfConfig":"79"},{"size":362,"mtime":499162500000,"results":"80","hashOfConfig":"79"},{"size":4693,"mtime":1613074181779,"results":"81","hashOfConfig":"79"},{"size":350,"mtime":1611891067957,"results":"82","hashOfConfig":"79"},{"size":976,"mtime":1612749091124,"results":"83","hashOfConfig":"79"},{"size":336,"mtime":1611927046554,"results":"84","hashOfConfig":"79"},{"size":875,"mtime":1612628540611,"results":"85","hashOfConfig":"79"},{"size":11710,"mtime":1613073877143,"results":"86","hashOfConfig":"79"},{"size":7281,"mtime":1613072881812,"results":"87","hashOfConfig":"79"},{"size":652,"mtime":1612541712194,"results":"88","hashOfConfig":"79"},{"size":2506,"mtime":1613073245535,"results":"89","hashOfConfig":"79"},{"size":2357,"mtime":1613073281730,"results":"90","hashOfConfig":"79"},{"size":713,"mtime":1613072620324,"results":"91","hashOfConfig":"79"},{"size":2402,"mtime":1613073281730,"results":"92","hashOfConfig":"79"},{"size":2397,"mtime":1613073281730,"results":"93","hashOfConfig":"79"},{"size":2459,"mtime":1613073281730,"results":"94","hashOfConfig":"79"},{"size":4676,"mtime":1613073354234,"results":"95","hashOfConfig":"79"},{"size":791,"mtime":1612170899960,"results":"96","hashOfConfig":"79"},{"size":3720,"mtime":1613227846770,"results":"97","hashOfConfig":"79"},{"size":1776,"mtime":1613227202899,"results":"98","hashOfConfig":"79"},{"size":4379,"mtime":1613074172466,"results":"99","hashOfConfig":"79"},{"size":8243,"mtime":1613228897862,"results":"100","hashOfConfig":"79"},{"size":818,"mtime":1612714959393,"results":"101","hashOfConfig":"79"},{"size":872,"mtime":1612709235287,"results":"102","hashOfConfig":"79"},{"size":1001,"mtime":1612176107875,"results":"103","hashOfConfig":"79"},{"size":1338,"mtime":1612176868306,"results":"104","hashOfConfig":"79"},{"size":1522,"mtime":1612183677279,"results":"105","hashOfConfig":"79"},{"size":665,"mtime":1612709157898,"results":"106","hashOfConfig":"79"},{"size":1231,"mtime":1612020005178,"results":"107","hashOfConfig":"79"},{"size":906,"mtime":1613314346994,"results":"108","hashOfConfig":"79"},{"size":1488,"mtime":1612808580579,"results":"109","hashOfConfig":"79"},{"size":968,"mtime":1612624903112,"results":"110","hashOfConfig":"79"},{"size":3592,"mtime":1613072818346,"results":"111","hashOfConfig":"79"},{"size":7351,"mtime":1613072818346,"results":"112","hashOfConfig":"79"},{"size":12860,"mtime":1613217743965,"results":"113","hashOfConfig":"79"},{"size":984,"mtime":1613072620324,"results":"114","hashOfConfig":"79"},{"size":1319,"mtime":1613320610687,"results":"115","hashOfConfig":"79"},{"size":9300,"mtime":1613320029049,"results":"116","hashOfConfig":"79"},{"size":7066,"mtime":1613322808613,"results":"117","hashOfConfig":"79"},{"size":875,"mtime":1612628540611,"results":"118","hashOfConfig":"79"},{"size":950,"mtime":1612886996348,"results":"119","hashOfConfig":"79"},{"size":7317,"mtime":1613072881812,"results":"120","hashOfConfig":"79"},{"size":7512,"mtime":1613072818346,"results":"121","hashOfConfig":"79"},{"size":2597,"mtime":1613229303453,"results":"122","hashOfConfig":"79"},{"size":1659,"mtime":1613233041857,"results":"123","hashOfConfig":"79"},{"size":1477,"mtime":1612969106919,"results":"124","hashOfConfig":"79"},{"size":3721,"mtime":1613320730938,"results":"125","hashOfConfig":"79"},{"size":773,"mtime":1612863137990,"results":"126","hashOfConfig":"79"},{"size":0,"mtime":1612790390579,"results":"127","hashOfConfig":"79"},{"size":3500,"mtime":1612869762221,"results":"128","hashOfConfig":"79"},{"size":5097,"mtime":1613072818346,"results":"129","hashOfConfig":"79"},{"size":1117,"mtime":1612935426334,"results":"130","hashOfConfig":"79"},{"size":915,"mtime":1612969056170,"results":"131","hashOfConfig":"79"},{"size":8274,"mtime":1613072881812,"results":"132","hashOfConfig":"79"},{"size":5376,"mtime":1613292335134,"results":"133","hashOfConfig":"79"},{"size":2305,"mtime":1613232513512,"results":"134","hashOfConfig":"79"},{"size":3924,"mtime":1613072620324,"results":"135","hashOfConfig":"79"},{"size":641,"mtime":1613072641962,"results":"136","hashOfConfig":"79"},{"size":739,"mtime":1613072620324,"results":"137","hashOfConfig":"79"},{"size":712,"mtime":1613072620323,"results":"138","hashOfConfig":"79"},{"size":511,"mtime":1613072197043,"results":"139","hashOfConfig":"79"},{"size":297,"mtime":1613072103812,"results":"140","hashOfConfig":"79"},{"size":1128,"mtime":1613072619721,"results":"141","hashOfConfig":"79"},{"size":2184,"mtime":1613320732407,"results":"142","hashOfConfig":"79"},{"size":226,"mtime":1613319931814,"results":"143","hashOfConfig":"79"},{"size":301,"mtime":1613214608187,"results":"144","hashOfConfig":"79"},{"size":3012,"mtime":1613226549069,"results":"145","hashOfConfig":"79"},{"size":2859,"mtime":1613072808640,"results":"146","hashOfConfig":"79"},{"size":2194,"mtime":1613072816076,"results":"147","hashOfConfig":"79"},{"size":523,"mtime":1612779174120,"results":"148","hashOfConfig":"79"},{"size":539,"mtime":1613072847718,"results":"149","hashOfConfig":"79"},{"size":532,"mtime":1612801183454,"results":"150","hashOfConfig":"79"},{"size":525,"mtime":1612801083591,"results":"151","hashOfConfig":"79"},{"size":518,"mtime":1612863919908,"results":"152","hashOfConfig":"79"},{"size":2194,"mtime":1613072827595,"results":"153","hashOfConfig":"79"},{"size":299,"mtime":1613073132700,"results":"154","hashOfConfig":"79"},{"size":1000,"mtime":1613314551068,"results":"155","hashOfConfig":"79"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},"3c2w8d",{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"158"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"158"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"158"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"158"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"158"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"248","usedDeprecatedRules":"158"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"158"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"158"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"158"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"158"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"158"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\MTS-ReactJs\\mts-v2\\src\\index.js",[],["326","327"],"F:\\MTS-ReactJs\\mts-v2\\src\\reportWebVitals.js",[],"F:\\MTS-ReactJs\\mts-v2\\src\\components\\Header\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\components\\NotFound\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\features\\Student\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\features\\Home\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\App\\App.js",[],["328","329"],"F:\\MTS-ReactJs\\mts-v2\\src\\features\\Student\\pages\\AddEdit\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\features\\Student\\pages\\Table\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\components\\SideBar\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\components\\SideBar\\components\\StudentSide.jsx",["330"],"import React from \"react\";\r\nimport {\r\n  ListItem,\r\n  List,\r\n  ListItemIcon,\r\n  ListItemText\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport { SET_COLOR_TEAL } from \"styles/Color\";\r\nimport { useSideStyles } from \"styles/Side\";\r\n\r\n\r\nconst StudentSide = props => {\r\n\r\n  const { history } = props;\r\n  const classes = useSideStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const itemsList = [\r\n    {\r\n      text: \"View\",\r\n      icon: <ViewListIcon style={SET_COLOR_TEAL}/>,\r\n      onClick: () => history.push(\"/admin/student\")\r\n    },\r\n    {\r\n      text: \"Add\",\r\n      icon: <PersonAddIcon style={SET_COLOR_TEAL}/>,\r\n      onClick: () => history.push(\"/admin/student/add\")\r\n    },\r\n\r\n  ];\r\n  return (\r\n      <div>\r\n\r\n        <ListItem button onClick={handleClick}>\r\n        <ListItemIcon>\r\n          <PersonIcon style={SET_COLOR_TEAL}/>\r\n        </ListItemIcon>\r\n\r\n        <ListItemText \r\n          primary=\"Student\" \r\n          style={SET_COLOR_TEAL} \r\n        />\r\n\r\n        {open \r\n        ? <ExpandLess style={SET_COLOR_TEAL}/> \r\n        : <ExpandMore style={SET_COLOR_TEAL}/>\r\n        }\r\n\r\n        </ListItem>\r\n          <Collapse \r\n            in={open} \r\n            timeout=\"auto\" \r\n            unmountOnExit\r\n          >\r\n            <List \r\n              component=\"div\" \r\n              disablePadding\r\n            >\r\n                {itemsList.map((item) => {\r\n\r\n                const { text, icon, onClick } = item;\r\n\r\n                return (\r\n                <ListItem \r\n                  className={classes.nested} \r\n                  button key={text} \r\n                  onClick={onClick}\r\n                  >\r\n                    {icon \r\n                    && <ListItemIcon>{icon}</ListItemIcon>\r\n                    }\r\n\r\n                    <ListItemText \r\n                      primary={text} \r\n                      style={SET_COLOR_TEAL}\r\n                    />\r\n                </ListItem>\r\n                );\r\n            })}\r\n            </List>\r\n        </Collapse>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(StudentSide);","F:\\MTS-ReactJs\\mts-v2\\src\\components\\SideBar\\components\\AccountSide.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\components\\SideBar\\components\\HomeSide.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\components\\SideBar\\components\\TeamSide.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\components\\SideBar\\components\\TeacherSide.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\components\\SideBar\\components\\TopicSide.jsx",["331"],"import React from \"react\";\r\nimport {\r\n  ListItem,\r\n  List,\r\n  ListItemIcon,\r\n  ListItemText\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport { SET_COLOR_RED } from \"styles/Color\";\r\nimport { useSideStyles } from \"styles/Side\";\r\n\r\n\r\nconst TopicSide = props => {\r\n\r\n  const { history } = props;\r\n  const classes = useSideStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const itemsList = [\r\n    {\r\n      text: \"View\",\r\n      icon: <ViewListIcon style={SET_COLOR_RED}/>,\r\n      onClick: () => history.push(\"/admin/topic\")\r\n    },\r\n    {\r\n      text: \"Add\",\r\n      icon: <NoteAddIcon style={SET_COLOR_RED}/>,\r\n      onClick: () => history.push(\"/admin/topic/add\")\r\n    },\r\n\r\n  ];\r\n  return (\r\n      <div>\r\n        <ListItem button onClick={handleClick}>\r\n\r\n        <ListItemIcon>\r\n          <AssignmentIcon style={SET_COLOR_RED}/>\r\n        </ListItemIcon>\r\n\r\n        <ListItemText \r\n          primary=\"Topic\" \r\n          style={SET_COLOR_RED}\r\n        />\r\n        \r\n        {open ? \r\n          <ExpandLess style={SET_COLOR_RED}/> : \r\n          <ExpandMore style={SET_COLOR_RED}/>\r\n        }\r\n\r\n        </ListItem>\r\n          <Collapse \r\n            in={open} \r\n            timeout=\"auto\" \r\n            unmountOnExit\r\n          >\r\n            <List component=\"div\" disablePadding>\r\n                {itemsList.map((item) => {\r\n\r\n                const { text, icon, onClick } = item;\r\n\r\n                return (\r\n                <ListItem \r\n                  className={classes.nested} \r\n                  button key={text} \r\n                  onClick={onClick}\r\n                  >\r\n                    {icon && \r\n                      <ListItemIcon>{icon}</ListItemIcon>\r\n                    }\r\n                    <ListItemText \r\n                      primary={text} \r\n                      style={SET_COLOR_RED}\r\n                    />\r\n                </ListItem>\r\n                );\r\n            })}\r\n            </List>\r\n        </Collapse>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(TopicSide);","F:\\MTS-ReactJs\\mts-v2\\src\\components\\SideBar\\components\\NotiProfileSide.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\components\\Loader\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\features\\Student\\pages\\Info\\index.jsx",["332"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Avatar, Grid, ListItem, ListItemAvatar, ListItemText, Paper } from \"@material-ui/core\";\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ClassIcon from '@material-ui/icons/Class';\r\nimport ContactsIcon from '@material-ui/icons/Contacts';\r\nimport WcIcon from '@material-ui/icons/Wc';\r\nimport { SET_BACKGROUND_COLOR_PRIMARY } from \"styles/Color\";\r\nimport studentApi from \"api/Student\";\r\nimport Notification from \"custom-fields/Notification\";\r\nimport { formatDate } from \"utils/converter\";\r\nimport { useInfoStyles } from \"styles/Info\";\r\n\r\n\r\nexport default function InfoPage() {\r\n\r\n    const classes = useInfoStyles();\r\n    const { studentId } = useParams();\r\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\r\n    const [studentInfo, setStudentInfo] = useState({});\r\n\r\n    const fetchData = async () => {\r\n        if(studentId !== undefined){\r\n            studentApi.info(studentId).then(res=>{\r\n                res.errorMessage\r\n                ? setNotify({\r\n                    isOpen: true,\r\n                    message: res.errorMessage,\r\n                    type: 'error'\r\n                })\r\n                : setStudentInfo(res.result);            \r\n            });\r\n        }else{\r\n            setNotify({\r\n                isOpen: true,\r\n                message: \"Sory, Not Found\",\r\n                type: 'error'\r\n            })\r\n            setStudentInfo([]); \r\n        }\r\n      \r\n    };\r\n\r\n    useEffect(() => { fetchData(); }, []);\r\n    \r\n    const renderRow = (icon, title, info) =>{\r\n        return(\r\n            <ListItem className={classes.left}>\r\n                <ListItemAvatar>\r\n                    <Avatar style={SET_BACKGROUND_COLOR_PRIMARY}>\r\n                    {icon}\r\n                    </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary={title} secondary={info} />\r\n            </ListItem>\r\n        );\r\n    }\r\n\r\n    const renderRowRight = (icon, title, info) =>{\r\n        return(\r\n            <ListItem className={classes.right}>\r\n                <ListItemAvatar>\r\n                    <Avatar style={SET_BACKGROUND_COLOR_PRIMARY}>\r\n                    {icon}\r\n                    </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary={title} secondary={info} />\r\n            </ListItem>\r\n        );\r\n    }\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n        <Grid container className={classes.grid}>\r\n            <Grid item xs={12} sm={4}>\r\n                <Paper elevation={4} className={classes.pager}>\r\n                    \r\n                    <h1 className={classes.title}>Student Info</h1>\r\n                    {renderRow(<ContactsIcon/>, \"Code\", studentInfo.code)}\r\n                    {renderRowRight(<PersonIcon />, \"Name\", studentInfo.name)}\r\n                    {renderRow(<WcIcon />, \"Gender\", studentInfo.gender)}\r\n                    {renderRowRight(<DateRangeIcon />, \"Birthday\", formatDate(studentInfo.birthday))}\r\n                    {renderRow(<EmailIcon />, \"Email\", studentInfo.email)}\r\n                    {renderRowRight(<PhoneIphoneIcon />, \"Phone\", studentInfo.phone)}\r\n                    {renderRow(<ClassIcon />, \"Faculty\", studentInfo.facultyName)}\r\n                </Paper>\r\n                \r\n            </Grid>\r\n        </Grid>\r\n        <Notification\r\n            notify={notify}\r\n            setNotify={setNotify}\r\n        />\r\n        </div>\r\n        \r\n    );\r\n}","F:\\MTS-ReactJs\\mts-v2\\src\\utils\\converter.js",[],"F:\\MTS-ReactJs\\mts-v2\\src\\features\\Login\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\features\\Topic\\pages\\Table\\index.jsx",["333"],"import React, { useEffect, useState } from 'react'\r\nimport { TableBody, TableRow, TableCell, InputAdornment, Toolbar, FormLabel } from '@material-ui/core';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport { Search } from '@material-ui/icons';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport useTableCustom from 'custom-fields/Use/useTableCustom';\r\nimport Input from 'custom-fields/Input';\r\nimport ButtonIcon from 'custom-fields/ButtonIcon';\r\nimport ConfirmDialog from 'custom-fields/ConfirmDialog';\r\nimport Notification from 'custom-fields/Notification';\r\nimport { useTableStyles } from 'styles/Table';\r\nimport topicApi from 'api/Topic';\r\nimport { changeListToText, formatDateTime } from 'utils/converter';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst headCells = [\r\n    { id: 'id', label: 'ID' },\r\n    { id: 'name', label: 'Name' },\r\n    { id: 'teamNames', label: 'Team ' },\r\n    { id: 'facultyName', label: 'Faculty ' },\r\n    { id: 'startTime', label: 'Start Time' },\r\n    { id: 'endTime', label: 'End Time' },\r\n    { id: 'teacherName', label: 'Teacher' },\r\n    { id: 'status', label: 'Status' },\r\n    { id: 'action', label: 'Action' },\r\n   \r\n]\r\n\r\nexport default function TablePage(props) {\r\n\r\n    const classes = useTableStyles();\r\n    const {history} = props;\r\n    const { studentId } = useParams();\r\n    const [records, setRecords] = useState([]);\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } });\r\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\r\n    const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: '', subTitle: '' })\r\n\r\n    //console.log(history.location.pathname); <=> useRouteMatch()???\r\n\r\n    const fetchData = async () => {\r\n        \r\n        if(studentId === undefined){\r\n            topicApi.search().then(res=>{\r\n                \r\n                res.errorMessage\r\n                ? setNotify({\r\n                    isOpen: true,\r\n                    message: res.errorMessage,\r\n                    type: 'error'\r\n                })\r\n                : setRecords(res.result);\r\n\r\n            })\r\n         \r\n        }else{\r\n            topicApi.searchByStudentId(studentId).then(res=>{\r\n                \r\n                res.errorMessage\r\n                ? setNotify({\r\n                    isOpen: true,\r\n                    message: res.errorMessage,\r\n                    type: 'error'\r\n                })\r\n                : setRecords(res.result);\r\n\r\n            })\r\n        }\r\n    };\r\n\r\n    useEffect(() => { fetchData(); }, []);\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value === \"\")\r\n                    return items;\r\n                else\r\n                    //console.log(items);\r\n                    return items.filter(\r\n                        x => x.name.toLowerCase().includes(target.value.toLowerCase())\r\n                    );\r\n            }\r\n        })\r\n    };\r\n\r\n    const onDelete = id => {\r\n        setConfirmDialog({\r\n            ...confirmDialog,\r\n            isOpen: false\r\n        })\r\n        \r\n        topicApi.delete(id).then(res=>{\r\n            res.success\r\n            ? setNotify({\r\n                 isOpen: true,\r\n                 message: 'Deleted Successfully',\r\n                 type: 'error'\r\n             })\r\n            : setNotify({\r\n                 isOpen: true,\r\n                 message: 'Sory, Deleted Unsuccessfully',\r\n                 type: 'error'\r\n             })\r\n        })\r\n    }\r\n\r\n    const onRefresh = () => {\r\n        console.log(\"Refresh!\")\r\n        fetchData();\r\n    }\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    } = useTableCustom(records, headCells, filterFn);\r\n\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <FormLabel>\r\n                <h1 className={classes.title}>{!studentId ? \"Topic List\" : \"My Topic\"}</h1>\r\n            </FormLabel>\r\n            \r\n            <Toolbar>\r\n                <Input\r\n                    label=\"Search For Name\"\r\n                    className={classes.searchInput}\r\n                    InputProps={{\r\n                        startAdornment: (<InputAdornment position=\"start\">\r\n                            <Search />\r\n                        </InputAdornment>)\r\n                    }}\r\n                    onChange={handleSearch}\r\n                />\r\n                <ButtonIcon\r\n                    icon={<CachedIcon />}   \r\n                    onClick= {onRefresh} \r\n                />\r\n            </Toolbar>\r\n\r\n             <TblContainer>\r\n                    <TblHead />\r\n                    <TableBody>\r\n                        {\r\n                            recordsAfterPagingAndSorting().map(item =>\r\n                                (<TableRow key={item.id}>\r\n                                    <TableCell>{item.id}</TableCell>\r\n                                    <TableCell>{item.name}</TableCell>\r\n                                    <TableCell className={classes.tableCell}>{changeListToText(item.teamNames)}</TableCell>\r\n                                    <TableCell>{item.facultyName}</TableCell>\r\n                                    <TableCell>{formatDateTime(item.startTime)}</TableCell>\r\n                                    <TableCell>{formatDateTime(item.endTime)}</TableCell>\r\n                                    <TableCell>{item.teacherName}</TableCell>\r\n                                    <TableCell>{item.status}</TableCell>\r\n                             \r\n                                    <TableCell>\r\n                                        <ButtonIcon\r\n                                            size=\"small\"\r\n                                            icon={<EditOutlinedIcon fontSize=\"small\" />}   \r\n                                            onClick= {() => history.push(`${history.location.pathname}/${item.id}`)} \r\n                                            disabled = {studentId ? true : false}\r\n                                        />\r\n\r\n                                        <ButtonIcon\r\n                                            size=\"small\"\r\n                                            icon={<DeleteIcon fontSize=\"small\" />}    \r\n                                            onClick={() => {\r\n                                                setConfirmDialog({\r\n                                                    isOpen: true,\r\n                                                    title: 'Are you sure to delete this topic?',\r\n                                                    subTitle: \"You can't undo this operation\",\r\n                                                    onConfirm: () => { onDelete(item.id) }\r\n                                                },)\r\n                                            }}\r\n                                            disabled = {studentId ? true : false}\r\n                                        />\r\n                                      \r\n\r\n                                        <ButtonIcon\r\n                                            size=\"small\"\r\n                                            icon={<VisibilityIcon fontSize=\"small\" />}   \r\n                                            onClick= {() => history.push(`${history.location.pathname.replace(\"my\", \"topic\")}/${item.id}/view`)} \r\n                                        />\r\n                                        \r\n                                    </TableCell>\r\n                                </TableRow>)\r\n                            )\r\n                        }\r\n                    </TableBody>\r\n                </TblContainer>\r\n                <TblPagination />\r\n\r\n            \r\n                <Notification\r\n                    notify={notify}\r\n                    setNotify={setNotify}\r\n                />\r\n                <ConfirmDialog\r\n                    confirmDialog={confirmDialog}\r\n                    setConfirmDialog={setConfirmDialog}\r\n                />\r\n                \r\n        </div>\r\n    );\r\n}","F:\\MTS-ReactJs\\mts-v2\\src\\custom-fields\\Input\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\custom-fields\\Button\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\custom-fields\\Notification\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\custom-fields\\Popup\\index.jsx",[],["334","335"],"F:\\MTS-ReactJs\\mts-v2\\src\\custom-fields\\ConfirmDialog\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\custom-fields\\ButtonIcon\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\custom-fields\\RadioGroup\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\custom-fields\\DatePicker\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\custom-fields\\Select\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\features\\Teacher\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\features\\Teacher\\pages\\Info\\index.jsx",["336","337"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Avatar, Grid, ListItem, ListItemAvatar, ListItemText, Paper } from \"@material-ui/core\";\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ClassIcon from '@material-ui/icons/Class';\r\nimport ContactsIcon from '@material-ui/icons/Contacts';\r\nimport WcIcon from '@material-ui/icons/Wc';\r\nimport WorkOutlineIcon from '@material-ui/icons/WorkOutline';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport { SET_BACKGROUND_COLOR_PRIMARY } from \"styles/Color/color\";\r\nimport teacherApi from \"api/Teacher/teacherApi\";\r\nimport { useInfoStyles } from \"styles/Info\";\r\nimport { formatDate } from \"utils/converter\";\r\n\r\nexport default function InfoPage() {\r\n\r\n    const classes = useInfoStyles();\r\n    const { teacherId } = useParams();\r\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\r\n    const [teacherInfo, setTeacherInfo] = useState({});\r\n\r\n    const fetchData = async () => {\r\n        teacherApi.info(teacherId).then(res=>{\r\n            res.errorMessage\r\n            ? setNotify({\r\n                isOpen: true,\r\n                message: res.errorMessage,\r\n                type: 'error'\r\n            })\r\n            : setTeacherInfo(res.result);            \r\n        });\r\n    };\r\n\r\n    useEffect(() => { fetchData(); }, []);\r\n    \r\n    const renderRow = (icon, title, info) =>{\r\n        return(\r\n            <ListItem className={classes.left}>\r\n                <ListItemAvatar>\r\n                    <Avatar style={SET_BACKGROUND_COLOR_PRIMARY}>\r\n                    {icon}\r\n                    </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary={title} secondary={info} />\r\n            </ListItem>\r\n        );\r\n    }\r\n\r\n    const renderRowRight = (icon, title, info) =>{\r\n        return(\r\n            <ListItem className={classes.right}>\r\n                <ListItemAvatar>\r\n                    <Avatar style={SET_BACKGROUND_COLOR_PRIMARY}>\r\n                    {icon}\r\n                    </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary={title} secondary={info} />\r\n            </ListItem>\r\n        );\r\n    }\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n        <Grid container className={classes.grid}>\r\n            <Grid item xs={12} sm={4}>\r\n                <Paper elevation={4} className={classes.pager}>\r\n                    \r\n                    <h1 className={classes.title}>Teacher Info</h1>\r\n                    {renderRow(<ContactsIcon/>, \"Code\", teacherInfo.code)}\r\n                    {renderRowRight(<PersonIcon />, \"Name\", teacherInfo.name)}\r\n                    {renderRow(<WcIcon />, \"Gender\", teacherInfo.gender)}\r\n                    {renderRowRight(<DateRangeIcon />, \"Birthday\", formatDate(teacherInfo.birthday))}\r\n                    {renderRow(<EmailIcon />, \"Email\", teacherInfo.email)}\r\n                    {renderRowRight(<PhoneIphoneIcon />, \"Phone\", teacherInfo.phone)}\r\n                    {renderRow(<SchoolIcon />, \"Academy\", teacherInfo.academyName)}\r\n                    {renderRowRight(<WorkOutlineIcon />, \"Position\", teacherInfo.positionName)}\r\n                    {renderRow(<ClassIcon />, \"Faculty\", teacherInfo.facultyName)}\r\n                    \r\n                </Paper>\r\n                \r\n            </Grid>\r\n        </Grid>\r\n        </div>\r\n        \r\n    );\r\n}","F:\\MTS-ReactJs\\mts-v2\\src\\features\\Teacher\\pages\\Table\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\features\\Teacher\\pages\\AddEdit\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\custom-fields\\Checkbox\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\features\\Topic\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\features\\Topic\\pages\\AddEdit\\index.jsx",["338","339","340","341","342","343","344","345","346"],"F:\\MTS-ReactJs\\mts-v2\\src\\features\\Topic\\components\\Deadline\\index.jsx",["347","348","349","350","351","352","353","354","355"],"F:\\MTS-ReactJs\\mts-v2\\src\\app\\App.js",[],"F:\\MTS-ReactJs\\mts-v2\\src\\features\\Team\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\features\\Team\\AddEdit\\index.jsx",["356","357"],"import React from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport { FormGroup, FormLabel, Grid, List, ListItem, ListItemText, ListSubheader } from '@material-ui/core';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport Input from 'custom-fields/Input';\r\nimport { SET_BACKGROUND_COLOR_PRIMARY_DARK } from 'styles/Color';\r\nimport Button from 'custom-fields/Button';\r\nimport { useFormCustom } from 'custom-fields/Use/useFormCustom';\r\nimport { TYPE } from 'constants/Type/type';\r\nimport { initialFValuesTeamDefault } from 'constants/InitialValues';\r\nimport { useSelectTopicStyles } from 'styles/SelectTopic';\r\nimport TopicListAPI from 'api/Select/topicListAPI';\r\nimport teamApi from 'api/Team';\r\nimport { getTeamUpdateObject, getTeamCreateObject } from 'utils/getObject';\r\nimport Notification from 'custom-fields/Notification';\r\nimport { useFormStyles } from 'styles/Form';\r\n\r\n\r\n\r\nexport default function AddEditPage(props) {\r\n\r\n    const classes = useFormStyles();\r\n    const classesSelectTopic = useSelectTopicStyles();\r\n    const {history} = props;\r\n    const { teamId } = useParams();\r\n    const isAddMode = !teamId;\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('code' in fieldValues)\r\n            temp.code = fieldValues.code ? \"\" : \"This field is required.\"\r\n        if ('name' in fieldValues)\r\n            temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n        if ('topicId' in fieldValues)\r\n            temp.topicId = fieldValues.topicId.length !== 0 ? \"\" : \"This field is required.\"\r\n        \r\n        setErrors({ ...temp })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x === \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        notify,\r\n        setNotify,\r\n        notFound,\r\n        handleInputChange,\r\n        onReset\r\n    } = useFormCustom(initialFValuesTeamDefault, isAddMode, TYPE.TEAM, teamId, true, validate);\r\n\r\n    const handleTouchTap = (topicId, topicName) => {\r\n        setValues({\r\n            ...values,\r\n            [\"topicName\"]: topicName,\r\n            [\"topicId\"]:topicId\r\n        })\r\n   }\r\n   \r\n   const handleSubmit = e => {\r\n    //add or update \r\n        e.preventDefault();\r\n        \r\n        if(isAddMode){\r\n\r\n            const teamCreate = getTeamCreateObject(values);\r\n            teamApi.create(teamCreate).then(res=>{\r\n                if(res.success){\r\n                    setNotify({\r\n                        isOpen: true,\r\n                        message: \"Create Successfully\",\r\n                        type: \"success\"\r\n                    });\r\n                    setTimeout(() => history.push('/admin/team'), 1500);\r\n                    \r\n                }else{\r\n                    setNotify({\r\n                        isOpen: true,\r\n                        message: \"Sorry, Create Unsuccessfully\",\r\n                        type: \"error\"\r\n                    });\r\n                }\r\n            });\r\n\r\n        }else{\r\n\r\n            const teamUpdate = getTeamUpdateObject(values);\r\n            teamApi.update(teamId, teamUpdate).then(res=>{\r\n                if(res.success){\r\n                    setNotify({\r\n                        isOpen: true,\r\n                        message: \"Update Successfully\",\r\n                        type: \"success\"\r\n                    });\r\n                    setTimeout(() => history.push('/admin/team'), 1500);\r\n                    \r\n                }else{\r\n                    setNotify({\r\n                        isOpen: true,\r\n                        message: \"Sory, Update Unsuccessfully\",\r\n                        type: \"error\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n        <FormGroup onSubmit={handleSubmit}>\r\n            <FormLabel>\r\n                {isAddMode \r\n                ? <h1>Create a Team</h1>\r\n                : <h1>Update Team</h1>\r\n                }\r\n            </FormLabel>\r\n            \r\n            <Grid container className={classes.grid}>\r\n                <Grid item xs={12} sm={3}>\r\n                    <FormGroup>\r\n                        <Input\r\n                            name=\"name\"\r\n                            label=\"Name\"\r\n                            placeholder=\"Ex: Team vui ve khong quao\"\r\n                            value={values.name || \"\"}\r\n                            onChange={handleInputChange}\r\n                            error={errors.name}\r\n                        />\r\n                        <br/>\r\n                        <Input\r\n                            name=\"topicName\"\r\n                            label=\"Select Topic\"\r\n                            value={values.topicName || \"\"}\r\n                            disabled={true}\r\n                        />\r\n                        <br/>\r\n                        <List className={classesSelectTopic.root} subheader={<li />}>\r\n                            {TopicListAPI().map((items) => (\r\n                                <li key={items.facultyName} className={classesSelectTopic.listSection}>\r\n                                <ul className={classesSelectTopic.ul}>\r\n\r\n                                    <ListSubheader className={classesSelectTopic.subHeader}> {items.facultyName} </ListSubheader>\r\n                                        \r\n                                        {items.topicList.map((item) => (\r\n                                        <ListItem\r\n                                            key={item.topicId}\r\n                                            button\r\n                                            onClick={() => handleTouchTap(item.topicId, item.topicName)}\r\n                                            >\r\n                                            <ListItemText\r\n                                                primary={`- `+item.topicName}\r\n                                            />\r\n                                        </ListItem>\r\n                                        ))}\r\n                                </ul>\r\n                                </li>\r\n                            ))}\r\n                        </List>\r\n                        <br/>\r\n                    </FormGroup>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} className={classes.submit}>\r\n                <Button\r\n                    type=\"submit\"\r\n                    text={isAddMode ? \"Save\": \"Update\"} \r\n                    startIcon={isAddMode ? <SaveIcon />: <UpdateIcon />}\r\n                    onClick={handleSubmit}\r\n                    background = {SET_BACKGROUND_COLOR_PRIMARY_DARK}\r\n                    disabled={notFound ? true : false}\r\n                />\r\n                <Button\r\n                    text=\"Reset\"\r\n                    color=\"default\"\r\n                    startIcon={<RefreshIcon />}\r\n                    onClick={onReset} \r\n                />\r\n            </Grid>\r\n            \r\n            </FormGroup>\r\n\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","F:\\MTS-ReactJs\\mts-v2\\src\\features\\Team\\Table\\index.jsx",["358"],"import React, { useEffect, useState } from 'react'\r\nimport { TableBody, TableRow, TableCell, InputAdornment, Toolbar, FormLabel } from '@material-ui/core';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport { Search } from '@material-ui/icons';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport useTableCustom from 'custom-fields/Use/useTableCustom';\r\nimport Input from 'custom-fields/Input';\r\nimport ButtonIcon from 'custom-fields/ButtonIcon';\r\nimport ConfirmDialog from 'custom-fields/ConfirmDialog';\r\nimport Notification from 'custom-fields/Notification';\r\nimport { useTableStyles } from 'styles/Table';\r\nimport teamApi from 'api/Team';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst headCells = [\r\n    { id: 'id', label: 'ID' },\r\n    { id: 'name', label: 'Name' },\r\n    { id: 'facultyName', label: 'Faculty' },\r\n    { id: 'topicName', label: 'Topic ' },\r\n    { id: 'studentTotal', label: 'Total' },\r\n    { id: 'status', label: 'Status' },\r\n    { id: 'action', label: 'Action' },\r\n]\r\n\r\nexport default function TablePage(props) {\r\n\r\n    const classes = useTableStyles();\r\n    const {history} = props;\r\n    const { topicId } = useParams();\r\n    const [records, setRecords] = useState([]);\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } });\r\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\r\n    const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: '', subTitle: '' })\r\n\r\n    //console.log(history.location.pathname); <=> useRouteMatch()???\r\n\r\n    const fetchData = async () => {\r\n\r\n        if(topicId){\r\n            teamApi.searchByTopicId(topicId).then(res=>{\r\n                res.errorMessage\r\n                ? setNotify({\r\n                    isOpen: true,\r\n                    message: res.errorMessage,\r\n                    type: 'error'\r\n                })\r\n                : setRecords(res.result);\r\n\r\n            })\r\n        }else{\r\n            teamApi.search().then(res=>{\r\n                res.errorMessage\r\n                ? setNotify({\r\n                    isOpen: true,\r\n                    message: res.errorMessage,\r\n                    type: 'error'\r\n                })\r\n                : setRecords(res.result);\r\n\r\n            })\r\n        }\r\n    };\r\n\r\n    useEffect(() => { fetchData(); }, []);\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value === \"\")\r\n                    return items;\r\n                else\r\n                    //console.log(items);\r\n                    return items.filter(\r\n                        x => x.name.toLowerCase().includes(target.value.toLowerCase())\r\n                    );\r\n            }\r\n        })\r\n    };\r\n\r\n    const onDelete = id => {\r\n        setConfirmDialog({\r\n            ...confirmDialog,\r\n            isOpen: false\r\n        })\r\n        \r\n        teamApi.delete(id).then(res=>{\r\n            res.success\r\n            ? setNotify({\r\n                 isOpen: true,\r\n                 message: 'Deleted Successfully',\r\n                 type: 'error'\r\n             })\r\n            : setNotify({\r\n                 isOpen: true,\r\n                 message: 'Sory, Deleted Unsuccessfully',\r\n                 type: 'error'\r\n             })\r\n        })\r\n    }\r\n\r\n    const onRefresh = () => {\r\n        console.log(\"Refresh!\")\r\n        fetchData();\r\n    }\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    } = useTableCustom(records, headCells, filterFn);\r\n\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <FormLabel>\r\n                <h1 className={classes.title}>Team List</h1>\r\n            </FormLabel>\r\n            \r\n            <Toolbar>\r\n                <Input\r\n                    label=\"Search For Name\"\r\n                    className={classes.searchInput}\r\n                    InputProps={{\r\n                        startAdornment: (<InputAdornment position=\"start\">\r\n                            <Search />\r\n                        </InputAdornment>)\r\n                    }}\r\n                    onChange={handleSearch}\r\n                />\r\n                <ButtonIcon\r\n                    icon={<CachedIcon />}   \r\n                    onClick= {onRefresh} \r\n                />\r\n            </Toolbar>\r\n\r\n             <TblContainer>\r\n                    <TblHead />\r\n                    <TableBody>\r\n                        {\r\n                            recordsAfterPagingAndSorting().map(item =>\r\n                                (<TableRow key={item.id}>\r\n                                    <TableCell>{item.id}</TableCell>\r\n                                    <TableCell>{item.name}</TableCell>\r\n                                    <TableCell>{item.facultyName}</TableCell>\r\n                                    <TableCell>{item.topicName}</TableCell>\r\n                                    <TableCell>{item.studentTotal}</TableCell>\r\n                                    <TableCell>{item.status}</TableCell>\r\n                             \r\n                                    <TableCell>\r\n                                        <ButtonIcon\r\n                                            size=\"small\"\r\n                                            icon={<EditOutlinedIcon fontSize=\"small\" />}   \r\n                                            onClick= {() => history.push(`${history.location.pathname}/${item.id}`)} \r\n                                        />\r\n\r\n                                        <ButtonIcon\r\n                                            size=\"small\"\r\n                                            icon={<DeleteIcon fontSize=\"small\" />}    \r\n                                            onClick={() => {\r\n                                                setConfirmDialog({\r\n                                                    isOpen: true,\r\n                                                    title: 'Are you sure to delete this Team?',\r\n                                                    subTitle: \"You can't undo this operation\",\r\n                                                    onConfirm: () => { onDelete(item.id) }\r\n                                                },)\r\n                                        }}>\r\n                                        </ButtonIcon>\r\n\r\n                                        <ButtonIcon\r\n                                            size=\"small\"\r\n                                            icon={<VisibilityIcon fontSize=\"small\" />}   \r\n                                            onClick= {() => history.push(`${history.location.pathname}/${item.id}/view`)} \r\n                                        />\r\n                                        \r\n                                    </TableCell>\r\n                                </TableRow>)\r\n                            )\r\n                        }\r\n                    </TableBody>\r\n                </TblContainer>\r\n                <TblPagination />\r\n\r\n            \r\n                <Notification\r\n                    notify={notify}\r\n                    setNotify={setNotify}\r\n                />\r\n                <ConfirmDialog\r\n                    confirmDialog={confirmDialog}\r\n                    setConfirmDialog={setConfirmDialog}\r\n                />\r\n                \r\n        </div>\r\n    );\r\n}","F:\\MTS-ReactJs\\mts-v2\\src\\components\\SideBarForUser\\index.jsx",["359"],"import React from \"react\";\r\nimport {\r\n  ListItem,\r\n  List,\r\n  ListItemIcon,\r\n  ListItemText\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\nimport { SET_COLOR_PRIMARY } from \"styles/Color\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nconst StudentSide = props => {\r\n\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n  const studentId = 1;\r\n\r\n  const itemsList = [\r\n   \r\n    {\r\n      text: \"Topics \",\r\n      icon: <ViewListIcon style={SET_COLOR_PRIMARY}/>,\r\n      onClick: () => history.push(\"/mts/topic\")\r\n    },\r\n    {\r\n      text: \"Add Team\",\r\n      icon: <GroupAddIcon style={SET_COLOR_PRIMARY}/>,\r\n      onClick: () => history.push(\"/mts/team/add\")\r\n    },\r\n    {\r\n      text: \"My Topic\",\r\n      icon: <FolderOpenIcon style={SET_COLOR_PRIMARY}/>,\r\n      onClick: () => history.push(`/mts/my/${studentId}/view`)\r\n    },\r\n    {\r\n      text: \"My Info\",\r\n      icon: <AssignmentIndIcon style={SET_COLOR_PRIMARY}/>,\r\n      onClick: () => history.push(`/mts/info/${studentId}`)\r\n    },\r\n    {\r\n      text: \"My Account\",\r\n      icon: <AccountCircleIcon style={SET_COLOR_PRIMARY}/>,\r\n      onClick: () => history.push(\"/mts/account\")\r\n    },\r\n\r\n  ];\r\n  return (\r\n      <div>\r\n\r\n        <List \r\n          component=\"div\" \r\n          disablePadding\r\n        >\r\n            {itemsList.map((item) => {\r\n\r\n            const { text, icon, onClick } = item;\r\n\r\n            return (\r\n            <ListItem \r\n              className={classes.nested} \r\n              button key={text} \r\n              onClick={onClick}\r\n              >\r\n                {icon \r\n                && <ListItemIcon>{icon}</ListItemIcon>\r\n                }\r\n\r\n                <ListItemText \r\n                  primary={text} \r\n                  style={SET_COLOR_PRIMARY}\r\n                />\r\n            </ListItem>\r\n            );\r\n        })}\r\n        </List>\r\n       \r\n      </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(StudentSide);","F:\\MTS-ReactJs\\mts-v2\\src\\routes\\User\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\routes\\Admin\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\custom-fields\\Use\\useFormCustom.jsx",["360","361"],"F:\\MTS-ReactJs\\mts-v2\\src\\api\\Handle\\handleApi.js",[],"F:\\MTS-ReactJs\\mts-v2\\src\\api\\Handle\\executeError.js",[],["362","363"],"F:\\MTS-ReactJs\\mts-v2\\src\\utils\\getObject.js",[],"F:\\MTS-ReactJs\\mts-v2\\src\\features\\Team\\Views\\index.jsx",["364","365","366","367","368","369","370","371","372","373","374","375","376"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport GroupWorkIcon from '@material-ui/icons/GroupWork';\r\nimport teamApi from 'api/Team';\r\nimport { useParams } from 'react-router-dom';\r\nimport Input from 'custom-fields/Input';\r\nimport { Avatar, Grid, ListItemAvatar } from '@material-ui/core';\r\nimport { SET_BACKGROUND_COLOR_PRIMARY } from 'styles/Color';\r\nimport { changeListToText, formatDateTime, formatDate,changeListMember } from 'utils/converter';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(10),\r\n    padding: theme.spacing(1),\r\n //   width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  grid: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  text: {\r\n    marginLeft: 0,\r\n    background: \"red\",\r\n  }\r\n}));\r\n\r\nexport default function ViewTeamPage() {\r\n\r\n  const classes = useStyles();\r\n  const { teamId } = useParams();\r\n  const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\r\n  const [teamInfo, setTeamInfo] = useState({});\r\n\r\n  const fetchData = async () => {\r\n      teamApi.view(teamId).then(res=>{\r\n          res.errorMessage\r\n          ? setNotify({\r\n              isOpen: true,\r\n              message: res.errorMessage,\r\n              type: 'error'\r\n          })\r\n          : setTeamInfo(res.result);            \r\n      });\r\n  };\r\n\r\n  useEffect(() => { fetchData(); }, []);   \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container className={classes.grid}>\r\n        <Grid item xs={12} sm={4}>\r\n        <h1>{teamInfo.name}</h1>\r\n\r\n          <Accordion>\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n            >\r\n              <Typography className={classes.heading}>Basic</Typography>\r\n            </AccordionSummary>\r\n\r\n            <AccordionDetails>\r\n              <Typography component={'span'} variant={'body2'} align={\"left\"}>\r\n                \r\n                <li key={teamInfo.id}>{`ID : #${teamInfo.id}`}</li>\r\n                <li key={teamInfo.name}>{`Name : ${teamInfo.name}`}</li>\r\n                <li key={teamInfo.status}>{`Status : ${teamInfo.status}`}</li>\r\n\r\n              </Typography>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n\r\n          <Accordion>\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel2a-content\"\r\n              id=\"panel2a-header\"\r\n            >\r\n              <Typography className={classes.heading}>Submit</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <Typography>\r\n                \r\n              </Typography>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n\r\n          <Accordion>\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel2a-content\"\r\n              id=\"panel2a-header\"\r\n            >\r\n              <Typography className={classes.heading}>Point</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <Typography>\r\n                \r\n              </Typography>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n\r\n          <Accordion>\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel2a-content\"\r\n              id=\"panel2a-header\"\r\n            >\r\n              <Typography className={classes.heading}>Member</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <Typography component={'div'} variant={'body2'} align={\"left\"}>\r\n                  {teamInfo.students\r\n                    ? teamInfo.students.map(item => {\r\n                        return <li key={item.count}>{`${item.count} | ${item.studentName} | ${formatDate(item.timeJoin)}`}</li>\r\n                      })\r\n                    : \"No member yet.\" // !=[]\r\n                  }\r\n              </Typography>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n\r\n          <Accordion disabled>\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel3a-content\"\r\n              id=\"panel3a-header\"\r\n            >\r\n              <Typography className={classes.heading}>Disabled Accordion</Typography>\r\n            </AccordionSummary>\r\n\r\n          </Accordion>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n  );\r\n}\r\n","F:\\MTS-ReactJs\\mts-v2\\src\\api\\Login\\loginAPI.js",[],["377","378"],"F:\\MTS-ReactJs\\mts-v2\\src\\features\\Account\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\features\\Account\\pages\\Table\\index.jsx",["379","380","381"],"import React, { useEffect, useState } from 'react'\r\nimport { TableBody, TableRow, TableCell, InputAdornment, Toolbar, FormLabel, Checkbox } from '@material-ui/core';\r\nimport { Search } from '@material-ui/icons';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport useTableCustom from 'custom-fields/Use/useTableCustom';\r\nimport Input from 'custom-fields/Input';\r\nimport ButtonIcon from 'custom-fields/ButtonIcon';\r\nimport ConfirmDialog from 'custom-fields/ConfirmDialog';\r\nimport Notification from 'custom-fields/Notification';\r\nimport studentApi from 'api/Student/studentApi';\r\nimport { useTableStyles } from 'styles/Table';\r\nimport accountApi from 'api/Account';\r\nimport Select from 'custom-fields/Select';\r\nimport { LIST_DEFAULT, LIST_ROLES } from 'constants/InitialValues/initialValues';\r\n\r\nconst headCells = [\r\n    { id: 'id', label: 'ID' },\r\n    { id: 'username', label: 'Username' },\r\n    { id: 'password', label: 'Password' },\r\n    { id: 'status', label: 'Status' },\r\n    { id: 'roles', label: 'Roles' },\r\n    { id: 'resetPassword', label: 'Reset Password' },\r\n    { id: 'changeRoles', label: 'Change Roles' },\r\n    { id: 'save', label: 'Save' },\r\n   \r\n]\r\n\r\nexport default function TablePage(props) {\r\n\r\n    const classes = useTableStyles();\r\n    const {history} = props;\r\n    const [records, setRecords] = useState([]);\r\n    const [saveChange, setSaveChange] = useState({newPassword: \"\", tickDefault: true, roles: \"\", status: \"\"});\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } });\r\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\r\n    const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: '', subTitle: '' })\r\n\r\n    //console.log(history.location.pathname); <=> useRouteMatch()???\r\n\r\n    const fetchData = async () => {\r\n        \r\n        accountApi.search().then(res=>{\r\n            res.errorMessage\r\n            ? setNotify({\r\n                isOpen: true,\r\n                message: res.errorMessage,\r\n                type: 'error'\r\n            })\r\n            : setRecords(res.result);\r\n\r\n        })\r\n    };\r\n\r\n    useEffect(() => { fetchData(); }, []);\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value === \"\")\r\n                    return items;\r\n                else\r\n                    //console.log(items);\r\n                    return items.filter(\r\n                        x => x.code.toLowerCase().includes(target.value.toLowerCase())\r\n                    );\r\n            }\r\n        })\r\n    };\r\n\r\n    const onDelete = id => {\r\n        setConfirmDialog({\r\n            ...confirmDialog,\r\n            isOpen: false\r\n        })\r\n        \r\n        studentApi.delete(id).then(res=>{\r\n            res.success\r\n            ? setNotify({\r\n                 isOpen: true,\r\n                 message: 'Deleted Successfully',\r\n                 type: 'error'\r\n             })\r\n            : setNotify({\r\n                 isOpen: true,\r\n                 message: 'Sory, Deleted Unsuccessfully',\r\n                 type: 'error'\r\n             })\r\n        })\r\n    }\r\n\r\n    const onRefresh = () => {\r\n        console.log(\"Refresh!\")\r\n        fetchData();\r\n    }\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    } = useTableCustom(records, headCells, filterFn);\r\n\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <FormLabel>\r\n                <h1 className={classes.title}>Account List</h1>\r\n            </FormLabel>\r\n            \r\n            <Toolbar>\r\n                <Input\r\n                    label=\"Search For Username\"\r\n                    className={classes.searchInput}\r\n                    InputProps={{\r\n                        startAdornment: (<InputAdornment position=\"start\">\r\n                            <Search />\r\n                        </InputAdornment>)\r\n                    }}\r\n                    onChange={handleSearch}\r\n                />\r\n                <ButtonIcon\r\n                    icon={<CachedIcon />}   \r\n                    onClick= {onRefresh} \r\n                />\r\n            </Toolbar>\r\n\r\n             <TblContainer>\r\n                    <TblHead />\r\n                    <TableBody>\r\n                        {\r\n                            recordsAfterPagingAndSorting().map(item =>\r\n                                (<TableRow key={item.id}>\r\n                                    <TableCell>{item.id}</TableCell>\r\n                                    <TableCell>{item.username}</TableCell>\r\n                                    <TableCell><VisibilityOffIcon fontSize=\"small\" color=\"primary\"/></TableCell>\r\n                                    <TableCell>{item.status}</TableCell>\r\n                                    <TableCell>{item.roles}</TableCell>\r\n                                    <TableCell>\r\n                                        <Input\r\n                                            name=\"password\"\r\n                                            label=\"New Password\"\r\n                                            value={\"A\"}\r\n                                            // onChange={handleInputChange}\r\n                                            // error={errors.username}\r\n                                            // disabled={\r\n                                            //         !isAddMode\r\n                                            //         ? true\r\n                                            //         : values.tickDefaultUsername\r\n                                            //     }\r\n                                        />\r\n                                        <Checkbox \r\n                                            name=\"tickDefaultUsername\"\r\n                                            label=\"Default\"\r\n                                            value={false}\r\n                                            //onChange={handleInputChange}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                    <Select\r\n                                        name=\"rolesId\"\r\n                                        label=\"Roles\"\r\n                                        value={\"a\"}\r\n                                        // onChange={handleInputChange}\r\n                                        options={LIST_ROLES() || LIST_DEFAULT()}\r\n                                        // error={errors.facultyId}\r\n                                    />                        \r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <ButtonIcon\r\n                                        // size=\"small\"\r\n                                            icon={<SaveIcon fontSize={\"large\"}/>}    \r\n                                            onClick={() => {\r\n                                                setConfirmDialog({\r\n                                                    isOpen: true,\r\n                                                    title: 'Are you sure to reset password?',\r\n                                                    subTitle: \"You can't undo this operation\",\r\n                                                    onConfirm: () => { onDelete(item.id) }\r\n                                                },)\r\n                                            }}>\r\n                                        </ButtonIcon>\r\n                                    </TableCell>\r\n                                </TableRow>)\r\n                            )\r\n                        }\r\n                    </TableBody>\r\n                </TblContainer>\r\n                <TblPagination />\r\n\r\n            \r\n                <Notification\r\n                    notify={notify}\r\n                    setNotify={setNotify}\r\n                />\r\n                <ConfirmDialog\r\n                    confirmDialog={confirmDialog}\r\n                    setConfirmDialog={setConfirmDialog}\r\n                />\r\n                \r\n        </div>\r\n    );\r\n}","F:\\MTS-ReactJs\\mts-v2\\src\\features\\Account\\pages\\Update\\index.jsx",["382","383","384","385","386","387","388","389","390","391"],"import React from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport { FormGroup, FormLabel, Grid, List, ListItem, ListItemText, ListSubheader } from '@material-ui/core';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport Input from 'custom-fields/Input';\r\nimport { SET_BACKGROUND_COLOR_PRIMARY_DARK } from 'styles/Color';\r\nimport Button from 'custom-fields/Button';\r\nimport { useFormCustom } from 'custom-fields/Use/useFormCustom';\r\nimport { TYPE } from 'constants/Type/type';\r\nimport { useSelectTopicStyles } from 'styles/SelectTopic';\r\nimport teamApi from 'api/Team';\r\nimport { getTeamUpdateObject, getTeamCreateObject } from 'utils/getObject';\r\nimport Notification from 'custom-fields/Notification';\r\nimport { useFormStyles } from 'styles/Form';\r\nimport { initialValuesAccountDefault } from 'constants/InitialValues';\r\n\r\n\r\n\r\nexport default function UpdateAccountPage(props) {\r\n\r\n    const classes = useFormStyles();\r\n    const classesSelectTopic = useSelectTopicStyles();\r\n    const {history} = props;\r\n    const { teamId } = useParams();\r\n    const isAddMode = !teamId;\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('username' in fieldValues)\r\n            temp.username = fieldValues.username ? \"\" : \"This field is required.\"\r\n        if ('passwordOld' in fieldValues)\r\n            temp.passwordOld = fieldValues.passwordOld ? (fieldValues.passwordOld.length > 8 ? \"\" : \"Password must be geater than 8\") : \"This field is required\"\r\n        if ('passwordNew' in fieldValues)\r\n            temp.passwordNew = fieldValues.passwordNew ? (fieldValues.passwordNew.length > 8 ? \"\" : \"Password must be geater than 8\") : \"This field is required\"\r\n        if ('passwordConfirm' in fieldValues)\r\n            temp.passwordConfirm = fieldValues.passwordConfirm === values.passwordNew ? \"\" : \"Password do not match\"\r\n\r\n        setErrors({ ...temp })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x === \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        notify,\r\n        setNotify,\r\n        notFound,\r\n        handleInputChange,\r\n        onReset\r\n    } = useFormCustom(initialValuesAccountDefault, false, TYPE.ACCOUNT, teamId, true, validate);\r\n   \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n        <FormGroup onSubmit={handleSubmit}>\r\n            <FormLabel>\r\n                {isAddMode \r\n                ? <h1>Create a Team</h1>\r\n                : <h1>Update Team</h1>\r\n                }\r\n            </FormLabel>\r\n            \r\n            <Grid container className={classes.grid}>\r\n                <Grid item xs={12} sm={3}>\r\n                    <FormGroup>\r\n                        <Input\r\n                            name=\"username\"\r\n                            label=\"username\"\r\n                            value={values.username || \"\"}\r\n                            onChange={handleInputChange}\r\n                            error={errors.username}\r\n                            disabled={true}\r\n                        />\r\n                        <br/>\r\n                        <Input\r\n                            name=\"passwordOld\"\r\n                            label=\"password Old\"\r\n                            value={values.passwordOld || \"\"}\r\n                            onChange={handleInputChange}\r\n                            error={errors.passwordOld}\r\n                        />\r\n                        <br/>\r\n                        <Input\r\n                            name=\"passwordNew\"\r\n                            label=\"Password New\"\r\n                            value={values.passwordNew || \"\"}\r\n                            onChange={handleInputChange}\r\n                            error={errors.passwordNew}\r\n                        />\r\n                        <br/>\r\n                        <Input\r\n                            name=\"passwordConfirm\"\r\n                            label=\"Password Confirm\"\r\n                            value={values.passwordConfirm || \"\"}\r\n                            onChange={handleInputChange}\r\n                            error={errors.passwordConfirm}\r\n                        />\r\n                        <br/>\r\n                    </FormGroup>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} className={classes.submit}>\r\n                <Button\r\n                    type=\"submit\"\r\n                    text={isAddMode ? \"Save\": \"Update\"} \r\n                    startIcon={isAddMode ? <SaveIcon />: <UpdateIcon />}\r\n                    onClick={handleSubmit}\r\n                    background = {SET_BACKGROUND_COLOR_PRIMARY_DARK}\r\n                    disabled={notFound ? true : false}\r\n                />\r\n                <Button\r\n                    text=\"Reset\"\r\n                    color=\"default\"\r\n                    startIcon={<RefreshIcon />}\r\n                    onClick={onReset} \r\n                />\r\n            </Grid>\r\n            \r\n            </FormGroup>\r\n\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","F:\\MTS-ReactJs\\mts-v2\\src\\api\\Account\\index.js",[],"F:\\MTS-ReactJs\\mts-v2\\src\\custom-fields\\Use\\useTableCustom.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\styles\\Form\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\styles\\Info\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\styles\\Login\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\styles\\SelectTopic\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\styles\\Table\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\styles\\Color\\index.js",[],"F:\\MTS-ReactJs\\mts-v2\\src\\constants\\InitialValues\\index.js",[],"F:\\MTS-ReactJs\\mts-v2\\src\\constants\\Type\\type.js",[],"F:\\MTS-ReactJs\\mts-v2\\src\\api\\URL\\index.js",[],"F:\\MTS-ReactJs\\mts-v2\\src\\api\\Topic\\index.js",[],"F:\\MTS-ReactJs\\mts-v2\\src\\api\\Team\\index.js",[],"F:\\MTS-ReactJs\\mts-v2\\src\\api\\Teacher\\index.js",[],"F:\\MTS-ReactJs\\mts-v2\\src\\api\\GetListForSelect\\facultyList.js",[],"F:\\MTS-ReactJs\\mts-v2\\src\\api\\GetListForSelect\\typeTopicListAPI.js",[],"F:\\MTS-ReactJs\\mts-v2\\src\\api\\GetListForSelect\\positionList.js",[],"F:\\MTS-ReactJs\\mts-v2\\src\\api\\GetListForSelect\\academyList.js",[],"F:\\MTS-ReactJs\\mts-v2\\src\\api\\GetListForSelect\\topicListAPI.js",[],"F:\\MTS-ReactJs\\mts-v2\\src\\api\\Student\\index.js",[],"F:\\MTS-ReactJs\\mts-v2\\src\\styles\\Side\\index.jsx",[],"F:\\MTS-ReactJs\\mts-v2\\src\\custom-fields\\DateTimePicker\\index.jsx",[],{"ruleId":"392","replacedBy":"393"},{"ruleId":"394","replacedBy":"395"},{"ruleId":"392","replacedBy":"396"},{"ruleId":"394","replacedBy":"397"},{"ruleId":"398","severity":1,"message":"399","line":8,"column":10,"nodeType":"400","messageId":"401","endLine":8,"endColumn":20},{"ruleId":"398","severity":1,"message":"399","line":8,"column":10,"nodeType":"400","messageId":"401","endLine":8,"endColumn":20},{"ruleId":"402","severity":1,"message":"403","line":47,"column":39,"nodeType":"404","endLine":47,"endColumn":41,"suggestions":"405"},{"ruleId":"402","severity":1,"message":"403","line":73,"column":39,"nodeType":"404","endLine":73,"endColumn":41,"suggestions":"406"},{"ruleId":"392","replacedBy":"407"},{"ruleId":"394","replacedBy":"408"},{"ruleId":"398","severity":1,"message":"409","line":22,"column":12,"nodeType":"400","messageId":"401","endLine":22,"endColumn":18},{"ruleId":"402","severity":1,"message":"403","line":37,"column":39,"nodeType":"404","endLine":37,"endColumn":41,"suggestions":"410"},{"ruleId":"398","severity":1,"message":"411","line":12,"column":10,"nodeType":"400","messageId":"401","endLine":12,"endColumn":40},{"ruleId":"398","severity":1,"message":"412","line":14,"column":8,"nodeType":"400","messageId":"401","endLine":14,"endColumn":18},{"ruleId":"398","severity":1,"message":"413","line":18,"column":10,"nodeType":"400","messageId":"401","endLine":18,"endColumn":24},{"ruleId":"398","severity":1,"message":"414","line":19,"column":8,"nodeType":"400","messageId":"401","endLine":19,"endColumn":24},{"ruleId":"398","severity":1,"message":"415","line":20,"column":10,"nodeType":"400","messageId":"401","endLine":20,"endColumn":13},{"ruleId":"398","severity":1,"message":"416","line":27,"column":12,"nodeType":"400","messageId":"401","endLine":27,"endColumn":19},{"ruleId":"398","severity":1,"message":"417","line":30,"column":12,"nodeType":"400","messageId":"401","endLine":30,"endColumn":17},{"ruleId":"398","severity":1,"message":"418","line":30,"column":19,"nodeType":"400","messageId":"401","endLine":30,"endColumn":27},{"ruleId":"398","severity":1,"message":"419","line":50,"column":9,"nodeType":"400","messageId":"401","endLine":50,"endColumn":18},{"ruleId":"398","severity":1,"message":"412","line":14,"column":8,"nodeType":"400","messageId":"401","endLine":14,"endColumn":18},{"ruleId":"398","severity":1,"message":"420","line":15,"column":8,"nodeType":"400","messageId":"401","endLine":15,"endColumn":14},{"ruleId":"398","severity":1,"message":"421","line":16,"column":8,"nodeType":"400","messageId":"401","endLine":16,"endColumn":24},{"ruleId":"398","severity":1,"message":"413","line":18,"column":10,"nodeType":"400","messageId":"401","endLine":18,"endColumn":24},{"ruleId":"398","severity":1,"message":"414","line":19,"column":8,"nodeType":"400","messageId":"401","endLine":19,"endColumn":24},{"ruleId":"398","severity":1,"message":"415","line":20,"column":10,"nodeType":"400","messageId":"401","endLine":20,"endColumn":13},{"ruleId":"398","severity":1,"message":"416","line":30,"column":12,"nodeType":"400","messageId":"401","endLine":30,"endColumn":19},{"ruleId":"398","severity":1,"message":"417","line":33,"column":12,"nodeType":"400","messageId":"401","endLine":33,"endColumn":17},{"ruleId":"398","severity":1,"message":"418","line":33,"column":19,"nodeType":"400","messageId":"401","endLine":33,"endColumn":27},{"ruleId":"422","severity":1,"message":"423","line":60,"column":13,"nodeType":"424","messageId":"425","endLine":60,"endColumn":37,"fix":"426"},{"ruleId":"422","severity":1,"message":"427","line":61,"column":13,"nodeType":"424","messageId":"425","endLine":61,"endColumn":32,"fix":"428"},{"ruleId":"402","severity":1,"message":"403","line":66,"column":39,"nodeType":"404","endLine":66,"endColumn":41,"suggestions":"429"},{"ruleId":"398","severity":1,"message":"430","line":34,"column":9,"nodeType":"400","messageId":"401","endLine":34,"endColumn":20},{"ruleId":"398","severity":1,"message":"431","line":2,"column":8,"nodeType":"400","messageId":"401","endLine":2,"endColumn":18},{"ruleId":"402","severity":1,"message":"432","line":77,"column":7,"nodeType":"404","endLine":77,"endColumn":9,"suggestions":"433"},{"ruleId":"392","replacedBy":"434"},{"ruleId":"394","replacedBy":"435"},{"ruleId":"398","severity":1,"message":"436","line":8,"column":8,"nodeType":"400","messageId":"401","endLine":8,"endColumn":16},{"ruleId":"398","severity":1,"message":"437","line":9,"column":8,"nodeType":"400","messageId":"401","endLine":9,"endColumn":20},{"ruleId":"398","severity":1,"message":"438","line":10,"column":8,"nodeType":"400","messageId":"401","endLine":10,"endColumn":18},{"ruleId":"398","severity":1,"message":"439","line":11,"column":8,"nodeType":"400","messageId":"401","endLine":11,"endColumn":21},{"ruleId":"398","severity":1,"message":"440","line":14,"column":8,"nodeType":"400","messageId":"401","endLine":14,"endColumn":13},{"ruleId":"398","severity":1,"message":"441","line":15,"column":10,"nodeType":"400","messageId":"401","endLine":15,"endColumn":16},{"ruleId":"398","severity":1,"message":"442","line":15,"column":24,"nodeType":"400","messageId":"401","endLine":15,"endColumn":38},{"ruleId":"398","severity":1,"message":"443","line":16,"column":10,"nodeType":"400","messageId":"401","endLine":16,"endColumn":38},{"ruleId":"398","severity":1,"message":"444","line":17,"column":10,"nodeType":"400","messageId":"401","endLine":17,"endColumn":26},{"ruleId":"398","severity":1,"message":"413","line":17,"column":28,"nodeType":"400","messageId":"401","endLine":17,"endColumn":42},{"ruleId":"398","severity":1,"message":"445","line":17,"column":55,"nodeType":"400","messageId":"401","endLine":17,"endColumn":71},{"ruleId":"398","severity":1,"message":"409","line":43,"column":10,"nodeType":"400","messageId":"401","endLine":43,"endColumn":16},{"ruleId":"402","severity":1,"message":"403","line":58,"column":37,"nodeType":"404","endLine":58,"endColumn":39,"suggestions":"446"},{"ruleId":"392","replacedBy":"447"},{"ruleId":"394","replacedBy":"448"},{"ruleId":"398","severity":1,"message":"416","line":33,"column":12,"nodeType":"400","messageId":"401","endLine":33,"endColumn":19},{"ruleId":"398","severity":1,"message":"449","line":35,"column":12,"nodeType":"400","messageId":"401","endLine":35,"endColumn":22},{"ruleId":"398","severity":1,"message":"450","line":35,"column":24,"nodeType":"400","messageId":"401","endLine":35,"endColumn":37},{"ruleId":"398","severity":1,"message":"451","line":3,"column":38,"nodeType":"400","messageId":"401","endLine":3,"endColumn":42},{"ruleId":"398","severity":1,"message":"436","line":3,"column":44,"nodeType":"400","messageId":"401","endLine":3,"endColumn":52},{"ruleId":"398","severity":1,"message":"437","line":3,"column":54,"nodeType":"400","messageId":"401","endLine":3,"endColumn":66},{"ruleId":"398","severity":1,"message":"452","line":3,"column":68,"nodeType":"400","messageId":"401","endLine":3,"endColumn":81},{"ruleId":"398","severity":1,"message":"453","line":13,"column":8,"nodeType":"400","messageId":"401","endLine":13,"endColumn":15},{"ruleId":"398","severity":1,"message":"454","line":14,"column":10,"nodeType":"400","messageId":"401","endLine":14,"endColumn":29},{"ruleId":"398","severity":1,"message":"455","line":14,"column":31,"nodeType":"400","messageId":"401","endLine":14,"endColumn":50},{"ruleId":"398","severity":1,"message":"456","line":24,"column":11,"nodeType":"400","messageId":"401","endLine":24,"endColumn":29},{"ruleId":"398","severity":1,"message":"416","line":25,"column":12,"nodeType":"400","messageId":"401","endLine":25,"endColumn":19},{"ruleId":"398","severity":1,"message":"419","line":48,"column":9,"nodeType":"400","messageId":"401","endLine":48,"endColumn":18},"no-native-reassign",["457"],"no-negated-in-lhs",["458"],["457"],["458"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["459"],["460"],["457"],["458"],"'notify' is assigned a value but never used.",["461"],"'initialFValuesDeadlinesDefault' is defined but never used.","'DatePicker' is defined but never used.","'formatDateTime' is defined but never used.","'AddEditDeadlines' is defined but never used.","'set' is defined but never used.","'history' is assigned a value but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","'setValues' is assigned a value but never used.","'Select' is defined but never used.","'TypeTopicListAPI' is defined but never used.","no-useless-computed-key","Unnecessarily computed property [\"topicName\"] found.","Property","unnecessarilyComputedProperty",{"range":"462","text":"463"},"Unnecessarily computed property [\"topicId\"] found.",{"range":"464","text":"465"},["466"],"'handleClick' is assigned a value but never used.","'teacherApi' is defined but never used.","React Hook useEffect has missing dependencies: 'id', 'initialFValuesDefault', 'isAddMode', and 'type'. Either include them or remove the dependency array. If 'setValues' needs the current value of 'initialFValuesDefault', you can also switch to useReducer instead of useState and read 'initialFValuesDefault' in the reducer.",["467"],["457"],["458"],"'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'DraftsIcon' is defined but never used.","'GroupWorkIcon' is defined but never used.","'Input' is defined but never used.","'Avatar' is defined but never used.","'ListItemAvatar' is defined but never used.","'SET_BACKGROUND_COLOR_PRIMARY' is defined but never used.","'changeListToText' is defined but never used.","'changeListMember' is defined but never used.",["468"],["457"],["458"],"'saveChange' is assigned a value but never used.","'setSaveChange' is assigned a value but never used.","'List' is defined but never used.","'ListSubheader' is defined but never used.","'teamApi' is defined but never used.","'getTeamUpdateObject' is defined but never used.","'getTeamCreateObject' is defined but never used.","'classesSelectTopic' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"469","fix":"470"},{"desc":"469","fix":"471"},{"desc":"469","fix":"472"},[2245,2258],"\"topicName\"",[2284,2295],"\"topicId\"",{"desc":"469","fix":"473"},{"desc":"474","fix":"475"},{"desc":"469","fix":"476"},"Update the dependencies array to be: [fetchData]",{"range":"477","text":"478"},{"range":"479","text":"478"},{"range":"480","text":"478"},{"range":"481","text":"478"},"Update the dependencies array to be: [id, initialFValuesDefault, isAddMode, type]",{"range":"482","text":"483"},{"range":"484","text":"478"},[1763,1765],"[fetchData]",[2698,2700],[1544,1546],[2460,2462],[3150,3152],"[id, initialFValuesDefault, isAddMode, type]",[1988,1990]]